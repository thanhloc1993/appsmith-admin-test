name: tiered.pre-merge

on:
  pull_request:
    types: [labeled]

concurrency:
  group: tiered.pre-merge-eibanam-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: "read"
  id-token: "write"

jobs:
  runners:
    runs-on: ["self-hosted", "60m-240mi", "spot", "persistent"]
    outputs:
      runners: ${{ steps.runners.outputs.runners }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop #should be develop
          repository: manabie-com/backend
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}

      - id: runners
        uses: ./.github/actions/runners

  check-commit-messages:
    if: ${{ contains(github.event.label.name, 'Ok to test')}}
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['check-commit-messages'] }}
    needs: [runners]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Check pull request title
        env:
          PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
        run: |
          set -e
          . ${{github.workspace}}/scripts/check-commit-msg.sh
          check_pr_title "${PULL_REQUEST_TITLE}"
      - name: Check commit messages
        env:
          SOURCE_BRANCH: ${{ github.head_ref }} # identical to $GITHUB_HEAD_REF
          TARGET_BRANCH: ${{ github.base_ref }} # identical to $GITHUB_BASE_REF
        run: |
          set -e
          . ${{github.workspace}}/scripts/check-commit-msg.sh
          git checkout ${TARGET_BRANCH} > /dev/null 2>&1
          git checkout ${SOURCE_BRANCH} > /dev/null 2>&1
          readarray -t message_list < <(git log --no-merges --format=format:'%s' ${TARGET_BRANCH}..${SOURCE_BRANCH})
          for message in "${message_list[@]}"; do
            echo "Checking message: \"${message}\""
            check_message "${message}"
          done

  install-deps:
    name: Install deps
    needs: [runners]
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['install-deps'] }}
    env:
      GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
    timeout-minutes: 20
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          persist-credentials: false
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}

      - name: Config github private repo
        run: git config --global --add url."https://${GITHUB_TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - uses: actions/cache@v3
        timeout-minutes: 3
        continue-on-error: true
        with:
          path: |
            ${{github.workspace}}/node_modules
            ~/.cache/ms-playwright
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Install root dependencies
        run: make setup

  lint:
    needs:
      - install-deps
      - runners
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['lint'] }}
    env:
      GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
    continue-on-error: false
    timeout-minutes: 15
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          persist-credentials: false
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}

      - uses: actions/cache@v3
        timeout-minutes: 3
        continue-on-error: true
        id: restore-deps
        with:
          path: |
            ${{github.workspace}}/node_modules
            ~/.cache/ms-playwright
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run format and lint
        run: yarn eslint --max-warnings=0 . && yarn prettier --check .

      - name: Run TS lint
        run: yarn ts-lint

      - name: Run BDD lint
        run: yarn bdd-lint

  unit-test:
    needs:
      - install-deps
      - runners
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['unit-test'] }}
    continue-on-error: false
    env:
      GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
      REPORT_HASURA_SECRET: ${{ secrets.REPORT_HASURA_SECRET }}
    timeout-minutes: 15
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          persist-credentials: false
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}

      - uses: actions/cache@v3
        id: restore-deps
        timeout-minutes: 3
        continue-on-error: true
        with:
          path: |
            ${{github.workspace}}/node_modules
            ~/.cache/ms-playwright
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run unit test
        run: make run-unit-test

  pr-description:
    if: ${{ contains(github.event.label.name, 'Ok to test')}}
    outputs:
      pullNumber: ${{ steps.pr-description.outputs.pullNumber }}
      owner: ${{ steps.pr-description.outputs.owner }}
      repo: ${{ steps.pr-description.outputs.repo }}
      tags: ${{ steps.pr-description.outputs.tags }}
      featureFiles: ${{ steps.pr-description.outputs.featureFiles }}
      eibanamRef: ${{ steps.pr-description.outputs.eibanamRef }}
      meRef: ${{ steps.pr-description.outputs.meRef }}
      feRef: ${{ steps.pr-description.outputs.feRef }}
      environment: ${{ steps.pr-description.outputs.environment }}
      organization: ${{ steps.pr-description.outputs.organization }}
    needs: [runners]
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['pr-description'] }}
    steps:
      - uses: actions/checkout@v3

      - id: pr-description
        uses: ./.github/actions/reuse.pr-description
        with:
          BUILD_GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}

  run-e2e-blocker-test:
    needs: [pr-description, runners]
    timeout-minutes: 100
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['run-e2e-blocker-test'] }}
    steps:
      - uses: manabie-com/workflow-telemetry-action@v1
        continue-on-error: true
        with:
          github_token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          comment_on_pr: false

      - uses: actions/checkout@v3

      - name: run-e2e
        uses: ./.github/actions/reuse.e2e
        if: ${{ !cancelled() }}
        timeout-minutes: 90
        with:
          RUN_ID: ${{ github.run_id }}
          DURATION_LIMIT: 3000000 # 50 mins
          GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}
          BUILD_GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
          OTLP_ACCESS_TOKEN: ${{ secrets.OTLP_ACCESS_TOKEN }}
          REPORT_HASURA_SECRET: ${{ secrets.REPORT_HASURA_SECRET }}
          UNLEASH_CLIENT_KEY: ${{ secrets.UNLEASH_CLIENT_KEY }}
          UNLEASH_CREDENTIAL: ${{ secrets.UNLEASH_CREDENTIAL }}

          FE_REF: "${{ needs.pr-description.outputs.feRef }}"
          ME_REF: "${{ needs.pr-description.outputs.meRef }}"
          EIBANAM_REF: "${{ needs.pr-description.outputs.eibanamRef }}"

          ENV: "${{ needs.pr-description.outputs.environment }}"
          ORGANIZATION: "${{ needs.pr-description.outputs.organization }}"

          REPO: "${{ needs.pr-description.outputs.repo }}"
          OWNER: "${{ needs.pr-description.outputs.owner }}"
          ISSUE_NUMBER: "${{ needs.pr-description.outputs.pullNumber }}"

          TAGS: "@blocker"
          FEATURE_FILES: ""
          FAIL_FAST: true

      - name: cleanup cucumber #because we can't add timeout in composite action
        if: always()
        timeout-minutes: 5
        run: |
          ./scripts/docker-compose.sh web_profile
        shell: bash

  run-e2e-extra-test:
    needs: [pr-description, runners]
    timeout-minutes: 100
    if: ${{ !(needs.pr-description.outputs.tags == '' && needs.pr-description.outputs.featureFiles == '') }}
    runs-on: ${{ fromJson(needs.runners.outputs.runners)['run-e2e-extra-test'] }}
    steps:
      - uses: manabie-com/workflow-telemetry-action@v1
        continue-on-error: true
        with:
          github_token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          comment_on_pr: false

      - uses: actions/checkout@v3

      - name: run-e2e
        uses: ./.github/actions/reuse.e2e
        timeout-minutes: 90
        with:
          RUN_ID: ${{ github.run_id }}
          DURATION_LIMIT: 3000000 # 50 mins
          GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}
          BUILD_GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
          OTLP_ACCESS_TOKEN: ${{ secrets.OTLP_ACCESS_TOKEN }}
          REPORT_HASURA_SECRET: ${{ secrets.REPORT_HASURA_SECRET }}
          UNLEASH_CLIENT_KEY: ${{ secrets.UNLEASH_CLIENT_KEY }}
          UNLEASH_CREDENTIAL: ${{ secrets.UNLEASH_CREDENTIAL }}

          FE_REF: "${{ needs.pr-description.outputs.feRef }}"
          ME_REF: "${{ needs.pr-description.outputs.meRef }}"
          EIBANAM_REF: "${{ needs.pr-description.outputs.eibanamRef }}"

          ENV: "${{ needs.pr-description.outputs.environment }}"
          ORGANIZATION: "${{ needs.pr-description.outputs.organization }}"

          REPO: "${{ needs.pr-description.outputs.repo }}"
          OWNER: "${{ needs.pr-description.outputs.owner }}"
          ISSUE_NUMBER: "${{ needs.pr-description.outputs.pullNumber }}"

          TAGS: "${{ needs.pr-description.outputs.tags }}"
          FEATURE_FILES: "${{ needs.pr-description.outputs.featureFiles }}"
          FAIL_FAST: false

      - name: cleanup cucumber #because we can't add timeout in composite action
        if: always()
        timeout-minutes: 5
        run: |
          ./scripts/docker-compose.sh web_profile
        shell: bash
